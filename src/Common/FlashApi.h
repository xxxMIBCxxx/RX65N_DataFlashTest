/*
 * FlashApi.h
 *
 *  Created on: 2020/10/31
 *      Author: MIBC
 */

#ifndef FLASHAPI_H_
#define FLASHAPI_H_
#include "FreeRTOS.h"
#include "semphr.h"
#include "r_flash_rx_if.h"								// FLASH I/F


//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#define FLASHAPI_ERASE_BLOCK_SIZE						( 64 )
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


typedef struct
{
	QueueHandle_t						MutexHandle;						// FlashAPI用ミューテックスハンドル
	bool								bOpen;								// オープンフラグ(false:未オープン, true：オープン)

} FLASHAPI_GLOBAL_TABLE;


//============================================================================================================
// FlashApI　初期化処理（※必ずシステムがコールすること）
//============================================================================================================
void FlashApi_Init(void);


//============================================================================================================
// FlashApI　オープン（※必ずシステムがコールすること）
//============================================================================================================
flash_err_t FlashApi_Open(void);


//============================================================================================================
// FlashApI　クローズ（※必ずシステムがコールすること）
//============================================================================================================
flash_err_t FlashApi_Close(void);


//============================================================================================================
// FlashApI　イレース
//============================================================================================================
flash_err_t FlashApi_Erase(flash_block_address_t BlockStartAddress, uint32_t NumBlocks);


//============================================================================================================
// FlashApI　ブランクチェック
//============================================================================================================
flash_err_t FlashApi_BlankCheck(uint32_t Address, uint32_t NumBytes, flash_res_t* peBlankCheckResult);


//============================================================================================================
// FlashApI　書込み
//============================================================================================================
flash_err_t FlashApi_Write(uint32_t ScrAddress, uint32_t DestAddress, uint32_t NumBytes);


//============================================================================================================
// FlashApI　Control
//============================================================================================================
flash_err_t FlashApi_Control(flash_cmd_t eCmd, void* pCfg);


#endif /* FLASHAPI_H_ */
